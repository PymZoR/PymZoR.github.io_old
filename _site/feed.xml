<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Axel&#39;s Blog</title>
    <description>Blog about software development, embedded systems and robotics.</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>How to put a man in the middle</title>
        <description>&lt;p&gt;It can be interesting to analyze an application interaction with the network.
Using a &amp;ldquo;man in the middle&amp;rdquo; is a common technique. Here are the main concepts on how understand and get running such a tool.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 id=&quot;you-said-a-&amp;quot;man-in-the-middle&amp;quot;-?&quot;&gt;You said a &amp;ldquo;man in the middle&amp;rdquo; ?&lt;/h1&gt;

&lt;p&gt;Let&amp;rsquo;s cite what the awesome people of Wikipedia have written for us:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In cryptography and computer security, a man-in-the-middle attack (often abbreviated to MITM, MitM, MIM, MiM or MITMA) is an attack where the attacker secretly &lt;strong&gt;relays&lt;/strong&gt; and &lt;strong&gt;possibly alters&lt;/strong&gt; the communication between two parties who believe they are directly communicating with each other&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From here to the end of this article, I&amp;rsquo;ll use the &lt;strong&gt;MITM&lt;/strong&gt; expressions.&lt;br&gt;
In resume, it is a powerful tool which enable us to be observers and possibly actors of a communication. The fact that the communication can be altered makes the MITM a powerful tool when it comes to analyze complex interactions.&lt;/p&gt;

&lt;h2 id=&quot;not-necessary-in-the-middle&quot;&gt;Not necessary in the middle&lt;/h2&gt;

&lt;p&gt;Between an application and an external server, there are several layers where the information get processed. As such, each layer can be chosen as a place to put our MITM.&lt;br&gt;
I will focus on three &amp;ldquo;major&amp;rdquo; layers, where MITM are commonly used:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;physical level&lt;/em&gt; with the help of a sniffer, to analyze frames going handled by the network card&lt;br&gt;&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;network level&lt;/em&gt;, capturing frames with a proxy server between the client and the distant server&lt;br&gt;&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;process level&lt;/em&gt;, handling systems calls directly within the process by dynamically injecting code&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;sniff-packets-with-wireshark&quot;&gt;Sniff packets with Wireshark&lt;/h1&gt;

&lt;p&gt;Bla bla&lt;br&gt;
Bla bla&lt;/p&gt;

&lt;h1 id=&quot;running-a-(ninja)-proxy-server&quot;&gt;Running a (Ninja) proxy server&lt;/h1&gt;

&lt;p&gt;Bla bla&lt;br&gt;
Bla bla&lt;/p&gt;

&lt;h2 id=&quot;patching-the-client&quot;&gt;Patching the client&lt;/h2&gt;

&lt;p&gt;Bla bla&lt;/p&gt;

&lt;h2 id=&quot;hooking-system-calls&quot;&gt;Hooking system calls&lt;/h2&gt;

&lt;p&gt;Bla bla&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;$ file /usr/share/slack/slack
/usr/share/slack/slack: ELF 64-bit LSB executable, x86-64, version 1 (SYSV)
dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux
2.6.24, BuildID[sha1]=f69bda37bf2066b030201e9694bf730d9a51cdae, stripped
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;more-code-injection-with-frida&quot;&gt;More code injection with Frida&lt;/h1&gt;

&lt;p&gt;Bla bla&lt;br&gt;
Bla bla&lt;/p&gt;
</description>
        <pubDate>Thu, 31 Dec 2015 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//security/linux/reverse%20engineering/2015/12/31/redirecting-a-black-box-socket-connection/</link>
        <guid isPermaLink="true">http://localhost:4000//security/linux/reverse%20engineering/2015/12/31/redirecting-a-black-box-socket-connection/</guid>
      </item>
    
      <item>
        <title>Setting up Node.js &gt;= 4.x on Debian 7</title>
        <description>&lt;p&gt;I just received my Beaglebone Black, installed with Debian 7.9 &amp;ldquo;Wheezy&amp;rdquo;.&lt;br&gt;
Here is a quick guide on how to set up node &amp;gt;= 4.x and gcc/g++ 4.8 for native bindings.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Unfortunately, Debian Wheezy provides only outdated versions of Node.js (0.12) and gcc/g++ (4.6).
In order to install the last version of Node.js, you have to either compile it from source or install the binaries.  &lt;/p&gt;

&lt;p&gt;Compile from source take some times, as it requires to install dependencies (such as gcc). The benefits are that your package manager is aware of your installation, and the dependencies required for native bindings are already set up.  &lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re not concerned by directly installed binaries (without package manager), and not interested in native bindings, go for the &lt;a href=&quot;#install-from-pre-compiled-binaries&quot;&gt;direct install&lt;/a&gt;.
Otherwise, &lt;a href=&quot;#compile-node-from-source&quot;&gt;compile Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;install-from-pre-compiled-binaries&quot;&gt;Install from pre-compiled binaries&lt;/h1&gt;

&lt;p&gt;Nothing fancy here, just download the binaries and put them in the right folders.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;wget https://Node.js.org/dist/v[VERSION]/node-[VERSION]-linux-armv7l.tar.gz
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;tar -xzvf node-[VERSION]-linux-armv7l.tar.gz
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;node-[VERSION]-linux-armv7l
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cp ./bin/node /usr/local/bin/node
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cp -r ./lib/node_modules /usr/local/lib/node_modules
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cp -r ./include/node /usr/local/include
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir -p /usr/local/man/man1 &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp ./share/man/man1/node.1 /usr/local/man/man1/node.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;compile-node-from-source&quot;&gt;Compile node from source&lt;/h1&gt;

&lt;h2 id=&quot;dependencies:-gcc/g++-4.8&quot;&gt;Dependencies: gcc/g++ 4.8&lt;/h2&gt;

&lt;p&gt;Both gcc and g++ 4.8 are present in the Debian 8 &amp;ldquo;Jessie&amp;rdquo; respositories. Let&amp;rsquo;s change Wheezy respositories into Jessie&amp;rsquo;s for the installation.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sed -i &lt;span class=&quot;s1&quot;&gt;&#39;s/wheezy/jessie/g&#39;&lt;/span&gt; /etc/apt/sources.list
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can now install gcc and g++ from Jessie repositories.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;apt-get install gcc-4.8 g++-4.8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Change the sources.list back&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sed -i &lt;span class=&quot;s1&quot;&gt;&#39;s/jessie/wheezy/g&#39;&lt;/span&gt; /etc/apt/sources.list
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case of you need to switch between 4.7 and 4.8 versions, this can be done with the following commands.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Add the alternatives&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 20
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 20
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50

&lt;span class=&quot;c&quot;&gt;# Switch between 4.6 and 4.8&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;update-alternatives --config gcc
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;update-alternatives --config g++
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can verify the current version of gcc/g++&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;gcc -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;build-and-install&quot;&gt;Build and install&lt;/h2&gt;

&lt;p&gt;Once the dependencies are set up, we can install node using &lt;a href=&quot;https://github.com/nodesource/distributions&quot;&gt;Node.js source&lt;/a&gt;
pretending we are running a Debian Jessie.&lt;/p&gt;

&lt;p&gt;For Node.js v4.x:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl -sL https://deb.nodesource.com/setup_4.x | bash -
apt-get install -y Node.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Node.js v5.x:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl -sL https://deb.nodesource.com/setup_5.x | bash -
apt-get install -y Node.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Mon, 16 Nov 2015 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//debian/node.js/embedded/iot/2015/11/16/setting-up-node-v4-x-on-beaglebone-black/</link>
        <guid isPermaLink="true">http://localhost:4000//debian/node.js/embedded/iot/2015/11/16/setting-up-node-v4-x-on-beaglebone-black/</guid>
      </item>
    
  </channel>
</rss>
